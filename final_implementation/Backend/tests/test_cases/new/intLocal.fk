-- #desc Local function test with integer values
-- #return pr ([0, 1, 2]) ([0, 1, 2])

main : {Pair (List Int) (List Int)}
main! = pr (state 0 (map {_ -> next!} [unit, unit, unit])) (state 0 (map {_ -> next!} [unit, unit, unit]))

interface State S = get : S
                  | put : S -> Unit

data Pair X Y = pr X Y


fst : X -> Y -> X
fst x y = x

snd : X -> Y -> Y
snd  x y = y

next : [State Int]Int
next! = fst get! (put (1 + get!))

state : S -> <State S>X -> X
state _ x = x
state s <get -> k> = state s (k s)
state _ <put s -> k> = state s (k unit)

map : {{X -> Y} -> List X -> List Y}
map f []        = []
map f (x :: xs) = f x :: map f xs